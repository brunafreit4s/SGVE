// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SGVE.Cart.Models.Context;

#nullable disable

namespace SGVE.Cart.Migrations
{
    [DbContext(typeof(SqlContext))]
    [Migration("20230621143319_SendUpdateVendasDataTableOnDb")]
    partial class SendUpdateVendasDataTableOnDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SGVE.Cart.Models.Produtos", b =>
                {
                    b.Property<long>("Id_Produto")
                        .HasColumnType("bigint")
                        .HasColumnName("ID_PRODUTO");

                    b.Property<decimal>("Custo")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("D_CUSTO");

                    b.Property<DateTime>("Data_Alteracao")
                        .HasMaxLength(20)
                        .HasColumnType("datetime2")
                        .HasColumnName("DT_ALTERACAO");

                    b.Property<DateTime>("Data_Cadastro")
                        .HasMaxLength(20)
                        .HasColumnType("datetime2")
                        .HasColumnName("DT_CADASTRO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("V_DESCRICAO");

                    b.Property<int>("Id_Tipo")
                        .HasColumnType("int")
                        .HasColumnName("FK_ID_TIPO");

                    b.Property<string>("Marca")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("V_MARCA");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("V_NOME");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("D_PRECO");

                    b.Property<int>("Quantidade")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("I_QUANTIDADE");

                    b.HasKey("Id_Produto");

                    b.ToTable("TB_PRODUTO_CARRINHO");
                });

            modelBuilder.Entity("SGVE.Cart.Models.Venda", b =>
                {
                    b.Property<long>("Id_Venda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID_VENDA");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id_Venda"));

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("V_USER_ID");

                    b.HasKey("Id_Venda");

                    b.ToTable("TB_VENDA");
                });

            modelBuilder.Entity("SGVE.Cart.Models.Venda_x_Produto", b =>
                {
                    b.Property<long>("Id_Venda_x_Produto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID_VENDA_PRODUTO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id_Venda_x_Produto"));

                    b.Property<int>("Count")
                        .HasColumnType("int")
                        .HasColumnName("I_COUNT");

                    b.Property<long>("Id_Produto")
                        .HasColumnType("bigint");

                    b.Property<long>("Id_Venda")
                        .HasColumnType("bigint");

                    b.HasKey("Id_Venda_x_Produto");

                    b.HasIndex("Id_Produto");

                    b.HasIndex("Id_Venda");

                    b.ToTable("TB_VENDA_PRODUTO");
                });

            modelBuilder.Entity("SGVE.Cart.Models.Venda_x_Produto", b =>
                {
                    b.HasOne("SGVE.Cart.Models.Produtos", "Produto")
                        .WithMany()
                        .HasForeignKey("Id_Produto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGVE.Cart.Models.Venda", "Venda")
                        .WithMany()
                        .HasForeignKey("Id_Venda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("Venda");
                });
#pragma warning restore 612, 618
        }
    }
}
